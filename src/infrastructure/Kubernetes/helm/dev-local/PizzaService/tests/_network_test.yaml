# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json

# Integration tests of network configurations across services, deployments and ingresses
suite: test network
templates:
  - pizza-db-pgweb/deployment-pgweb.yaml
  - pizza-db-pgweb/ingress.pgweb.yaml
  - pizza-db-pgweb/service-pgweb.yaml
  - pizza-db/deployment-postgres.yaml
  - pizza-db/service-postgres.yaml
  - pizza-service/deployment-pizza-service.yaml
  - pizza-service/ingress.pizza-service.yaml
  - pizza-service/service-pizza-service.yaml
tests:

  # Container ports
  - it: Container port of `postgres` deployment should be correct
    templates:
      - pizza-db/deployment-postgres.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 5432
  
  - it: Container port of `pizza-service` deployment should be correct
    templates:
      - pizza-service/deployment-pizza-service.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 8080

  - it: Container port of `pgweb` deployment should be correct
    set:
      services.pgweb.enabled: true
    templates:
      - pizza-db-pgweb/deployment-pgweb.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 8081

  # Service port mapping
  - it: Service port mapping of `pgweb` should be correct
    set:
      services.pgweb.enabled: true
    templates:
      - pizza-db-pgweb/service-pgweb.yaml
    asserts:
      - equal:
          path: spec.ports
          value:
            - port: 8081
              targetPort: 8081

  - it: Service port mapping of `pizza-service` should be correct
    templates:
      - pizza-service/service-pizza-service.yaml
    asserts:
      - equal:
          path: spec.ports
          value:
            - port: 8080
              targetPort: 8080
  
  - it: Service port mapping of `postgres` should be correct
    templates:
      - pizza-db/service-postgres.yaml
    asserts:
      - equal:
          path: spec.ports
          value:
            - port: 5432
              targetPort: 5432

  # Ingress routes
  - it: Ingress route of `_pgweb` should be correct
    set:
      services.pgweb.enabled: true
      global.domain: example.com
    templates:
      - pizza-db-pgweb/ingress.pgweb.yaml
    documentIndex: 0
    asserts:
      - equal:
          path: spec.routes[?(@.match == 'Host(`pizza-service.example.com`) && PathPrefix(`/_pgweb/`)')].services
          value:
            - name: pizza-db-pgweb
              port: 8081
  
  - it: Ingress route of `pizza-service` should be correct
    set:
      global.domain: example.com
    templates:
      - pizza-service/ingress.pizza-service.yaml
    documentIndex: 0
    asserts:
      - equal:
          path: spec.routes[?(@.match == 'Host(`pizza-service.example.com`) && PathPrefix(`/api`)')].services
          value:
            - name: pizza-service
              port: 8080
